type bool;
type int;
type float;
type pair;
type list;

decl head: list('a) -> 'a;
decl tail: list('a) -> list('a);
decl nil: list('a);
decl cons: 'a -> list('a) -> list('a);
decl map: ('a -> 'b) -> list('a) -> list('b);
decl one: int;
decl zero: int;
decl half: float;
decl succ: int -> int;
decl plus: int -> int -> int;
decl minus: int -> int -> int;
decl eq: 'a -> 'a -> bool;
decl not: bool -> bool;
decl true: bool;
decl false: bool;
decl pair: 'a -> 'b -> pair('a, 'b);
decl first: pair('a, 'b) -> 'a;
decl second: pair('a, 'b) -> 'b;
decl id: 'a -> 'a;
decl const: 'a -> 'b -> 'a;
decl apply: ('a -> 'b) -> 'a -> 'b;
decl choose: 'a -> 'a -> 'a;
decl fix: (('a -> 'b) -> 'a -> 'b) -> 'a -> 'b;
decl if: bool -> 'a -> 'a -> 'a;
